@startuml

skinparam componentStyle uml2
skinparam rectangle<<K8s>> {
  StereotypeFontColor #FFFFFF
  FontColor #FFFFFF
  BackgroundColor #3367d6
  BorderColor #3367d6
}
skinparam node<<Streaming>> {
  StereotypeFontColor #FFFFFF
  FontColor #FFFFFF
  BackgroundColor #000000
  BorderColor #000000
}
skinparam component<<ELT>> {
  StereotypeFontColor #000000
  BackgroundColor #CFE2F3
  BorderColor #6098D1
}
skinparam component<<Engine>> {
  StereotypeFontColor #FFFFFF
  FontColor #FFFFFF
  BackgroundColor #E67E22
  BorderColor #E67E22
}
skinparam component<<AnalyticsEng>> {
  StereotypeFontColor #FFFFFF
  FontColor #FFFFFF
  BackgroundColor #16928D
  BorderColor #16928D
}
skinparam node<<Lakehouse>> {
  StereotypeFontColor #000000
  BackgroundColor #FCE5CD
  BorderColor #E67E22
}
skinparam actor {
  BackgroundColor #EAD1DC
  BorderColor #8E44AD
}

actor "Analyst / Policymaker" as user

package "External Data Sources" {
  cloud "ACRA API\n(Business Registry)" as source_acra
  cloud "Government Expenditure API\n(data.gov.sg)" as source_gov
  cloud "SingStat API\n(Economic Indicators)" as source_singstat
  cloud "URA API\n(Property Market)" as source_ura
  cloud "Commercial Rental API\n(data.gov.sg)" as source_rental
}

node "Kubernetes Cluster (Podman Desktop)" <<K8s>> {
  package "A. Ingestion" {
    component "Multi-Source Producers\n(K8s CronJobs)" as producers <<ELT>>
    node "Apache Kafka" as kafka <<Streaming>> {
      queue "acra-companies" as topic_acra
      queue "government-expenditure" as topic_gov
      queue "singstat-economics" as topic_singstat
      queue "ura-property" as topic_ura
      queue "commercial-rental" as topic_rental
    }
  }

  package "B. Storage (Data Lakehouse)" {
    node "MinIO (S3 Object Store)" as minio {
      folder "Bronze (Raw)" as bronze
      folder "Silver (Cleansed)" as silver
      folder "Gold (Aggregated)" as gold
    }
    note right of minio
      Data is stored in
      **Delta Lake** format
    end note
  }

  package "C. Processing & Transformation" {
    component "Spark Streaming\n(Real-time ETL)" as spark_streaming <<Engine>>
    component "Spark ETL\n(Bronze to Silver)" as spark_etl <<Engine>>
    component "dbt Analytics\n(Silver to Gold)" as dbt <<AnalyticsEng>> {
      component "Staging Models" as dbt_staging
      component "Marts Models" as dbt_marts
    }
  }

  package "D. Analytics & ML" {
    component "Economic Intelligence\n(Survival Analysis, NLP)" as ml_economic
    component "Anomaly Detection\n(Real-time Monitoring)" as ml_anomaly
    component "Forecasting Models\n(Time Series)" as ml_forecast
    component "MLflow\n(Experiment Tracking)" as mlflow
    component "Jupyter Notebooks\n(Research & Development)" as jupyter
  }

  package "E. Visualization & Serving" {
    component "Interactive Dashboards\n(Streamlit)" as dashboard
    component "REST APIs\n(Data Access)" as rest_api
    component "dbt Docs\n(Data Catalog)" as dbt_docs
    component "Real-time Analytics\n(Live Monitoring)" as realtime_viz
  }
}

' --- Data Flows ---
source_acra --> producers : "ACRA Companies"
source_gov --> producers : "Gov Expenditure"
source_singstat --> producers : "Economic Data"
source_ura --> producers : "Property Market"
source_rental --> producers : "Commercial Rental"

producers --> topic_acra
producers --> topic_gov
producers --> topic_singstat
producers --> topic_ura
producers --> topic_rental

topic_acra --> spark_streaming
topic_gov --> spark_streaming
topic_singstat --> spark_streaming
topic_ura --> spark_streaming
topic_rental --> spark_streaming

spark_streaming --> bronze : "Real-time Ingestion"
spark_etl --> silver : "Data Cleansing & Validation"
bronze --> spark_etl

dbt_staging --> dbt_marts
silver --> dbt_staging
dbt_marts --> gold

silver --> ml_economic : "Feature Engineering"
silver --> ml_anomaly : "Real-time Detection"
silver --> ml_forecast : "Time Series Data"

ml_economic --> mlflow
ml_anomaly --> mlflow
ml_forecast --> mlflow

gold --> dashboard : "Business Intelligence"
gold --> rest_api : "Data Access"
gold --> dbt_docs : "Documentation"
silver --> realtime_viz : "Live Monitoring"

mlflow --> dashboard : "ML Insights"
jupyter --> mlflow : "Research Models"

user --> dashboard
user --> rest_api
user --> dbt_docs
user --> realtime_viz
@enduml